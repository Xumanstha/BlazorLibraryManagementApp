@page "/student"
@rendermode InteractiveServer
@using Librarymanagementapp.Database
@using Librarymanagementapp.Models
<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }


    .StudentAdd {
        width: 40%;
        height: 80%;
        border: 1px solid black;
        visibility: @message2;
        z-index:2;
        position:fixed;
        top:15%;
        left:36%;
    }

    .StudentRemove {
        width: 40%;
        height: 80%;
        border: 1px solid black;
        margin: auto;
        visibility: @message3;
          z-index:3;
        position:fixed;
        top:15%;
        left:36%;
    }

    .topic {
        text-align: center;
    }

    label {
        width: 35%;
    @* margin-left: 5%; *@
    }

    .inputs {
        margin: 3% 5%;
    @* border:1px solid black; *@
    }

    .main input {
        width: 50%;
    }

    .StudentRecord {
        margin-top: 3vh;
        height: auto;
        width: 80%;
        border: 1px solid black;
        padding: 25px;
           visibility: @message4;
          z-index:4;
        position:fixed;
        top:15%;
        left:19%;
    }

    .StudentRecord input {
        width: 100%;
    }

    .StudentRecord h1 {
        text-align: center;
    }

    .List {
        display: block;
        margin: auto;
    }

    table {
        width: 90%;
        margin: auto;
    }

    tr {
        height: 5vh;
    }

    table,
    th,
    td {
        border: 1px solid black;
        border-collapse: collapse;
        text-align: center;
    }

    .Edit {
        width: 4vw;
        height: 3vh;
       position:absolute;
       right:10%;
       top:60%;
    }
    .Edit:active{
        background-color:green;
    }
    .Studentremove{
        @* display:block; *@
        position:absolute;
        @* left:0px; *@
       right:5%;
       top:68%;
    } 
    .Studentremove:active{
        background-color: red;
    }
    .StdDetails
    {
    position:relative;
    @* border:1px solid black; *@
    margin-top: 5%;
    padding:20px;
    height:55%;
    }
    .StdDetails ul
    {
        list-style: none;
    }
    .BorrowedBooks ul
    {display: flex;
    justify-content: space-between;
    flex-direction: row;}
      .menu{
        width:50%;
        margin:auto;
        height:70vh;
        border:2px solid black;
        z-index:1;
        visibility: @message1;
    }
      .menu .buttons
    {
        width:90%;
        height:10%;
        border:1px solid black;
        margin:5% auto;
        display: block;
        z-index:1;
    }
</style>
<div class="menu">
<button class="buttons" @onclick='()=>Call("add")'>Add New Student</button>
<button class="buttons"  @onclick='()=>Call("search")'>Search Student</button>
<button class="buttons" @onclick='()=>Call("liststudent")'>List Of Student</button>
</div>


    <div class="StudentAdd">
        <button class="btns fa-solid fa-arrow-left" @onclick='()=>Call("add")'></button>
        <p>
        <h2 class="topic">Add new Student</h2>
        </p>
        <div class="inputs"> <label>Enter Name:</label><input type="text" @bind=name></div>
        <div class="inputs"> <label>Enter Gender:</label><select name="" id="" @bind=gender>
                <option value="Female">Female</option>
                <option value="Male">Male</option>
                <option value="Others">Others</option>
            </select></div>
        <div class="inputs"> <label>Enter Address:</label><input type="text" @bind=address></div>
        <div class="inputs"> <label>Enter Phone No.:</label><input type="text" @bind=Phone></div>
        <div class="inputs"> <label>Enter Faculty:</label><input type="text" @bind=Faculty></div>
        <div class="inputs"> <label>Enter Semester:</label><select name="" id="" @bind=Semester>
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
            </select></div>
        <div class="inputs"> <label>Enter ID:</label><input type="text" @bind=Id></div>
        <button @onclick="Listing" class="List">Enter Student's Details</button>
        @if(std!=null&&Id1==null){
            <p>This Id is already taken</p>
        }
    </div>
    <div class="StudentRemove">
<button class="btns fa-solid fa-arrow-left" @onclick='()=>Call("search")'></button>
        <p>
        <h2 class="topic">Search Student</h2>
        </p>
        <div class="inputs"> <label>Enter Name:</label><input type="text"></div>
        <div class="inputs"> <label>Enter Gender:</label><select name="" id="">
                <option>Female</option>
                <option>Male</option>
                <option>Others</option>
            </select></div>
        <div class="inputs"> <label>Enter ID:</label><input type="text" @bind=Id1></div>

        <button @onclick="()=>StudentDetails(Id1)" class="List">Enter for Details</button>
        <div class="StdDetails">
       @if(Id1!=null)
       {
        @if (std != null)
        {
               <button @onclick="()=>Edit(std)" class="Edit">
                        @if (std.IsEdit == false)
                        {
                            <span>Edit</span>
                        }
                        else
                        {
                            <span>Save</span>
                        }
                    </button>
        <button class="Studentremove" @onclick="()=>Remove(std)">Click to Remove Student</button>
        @if(std.IsEdit==false)
        {
            <ul>
            <li>Name:@std.Name</li>
            <li>Gender:@std.Gender</li>
            <li>Phone No.:@std.PhoneNo</li>
            <li>Address:@std.Address</li>
            <li>Faculty:@std.Faculty</li>
            <li>Semester:@std.Semester</li>
            </ul>
              @if(std.NumberOfBooks!=0)
                   {
                    <p class="BorrowedBooks"><label>Borrowed Books:</label>
                    @if (std.BorrowedBooks != null && std.BorrowedBooks.Any())
                    {
                        <ul>
                            @foreach (var book in std.BorrowedBooks)
                            {
                                <li>@book</li>
                            }
                        </ul>
                    }
                    </p>
                   }
            }else{
                <ul>
 <li> <label>Name:</label><input type="text" @bind=std.Name></li>
                 <li>Gender:@std.Gender</li>
                   <li> <label>Phone No.:</label>   <input type="text" @bind=std.PhoneNo></li>
                   <li>   <label>Address:</label> <input type="text" @bind=std.Address></li>
                  <li>   <label>Faculty:</label><input type="text" @bind=std.Faculty></li>
                   <li>     <label>Semester</label><input type="text" @bind=std.Semester></li>
                  @if(std.NumberOfBooks!=0)
                   {
                    <p><label>Borrowed Books:</label>
                    @if (std.BorrowedBooks != null && std.BorrowedBooks.Any())
                    {
                        <ul>
                            @foreach (var book in std.BorrowedBooks)
                            {
                                <li>@book</li>
                            }
                        </ul>
                    }
                    </p>
                
                   }
                </ul>
                
            }
        }
        else
        {
            <p>There is No Record of This Student</p>
        }
        }
        </div>
    </div>

<div class="StudentRecord">
     <button class="btns fa-solid fa-arrow-left" @onclick='()=>Call("liststudent")'></button>
    @* <button @onclick="()=>AddStudent()">Student's Record</button> *@
    <h1>All Student's Records</h1>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Address</th>
                <th>Gender</th>
                <th>Phone No.</th>
                <th>Faculty</th>
                <th>Semester</th>
                <th>Id</th>
                <th>No. of Books</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var s in StudentList.students)
            {
                <tr>@if (s.IsEdit == false)
                    {
                        <td>@s.Name</td>
                        <td>@s.Address</td>
                        <td>@s.Gender</td>
                        <td>@s.PhoneNo</td>
                        <td>@s.Faculty</td>
                        <td>@s.Semester</td>
                        <td>@s.Id</td>
                        <td>@s.NumberOfBooks</td>
                    }
                    else
                    {
                        <td><input type="text" @bind=s.Name></td>
                        <td><input type="text" @bind=s.Address></td>
                        <td><input type="text" @bind=s.Gender></td>
                        <td><input type="text" @bind=s.PhoneNo></td>
                        <td><input type="text" @bind=s.Faculty></td>
                        <td><input type="text" @bind=s.Semester></td>
                        <td><input type="text" @bind=s.Id></td>
                    }
                 
                </tr>
            }
        </tbody>
    </table>

</div>
@code
{
    private string message1="visible";
    private string message2="hidden";
    private string message3="hidden";
    private string message4="hidden";
    private int count=1;
    private StudentStructure? std;
    private string name = "";
    private string address = "";
    private string gender = "";
    private string Phone = "";
    private string Id = "";
    private string? Id1;
    private string Faculty = "";
    private string Semester = "";
    @* public List<student> StudentList = new List<student>()
{
new student("1", "Suman", "Male", "Devinagar", "0299028982", "BScCSIT", "3"),
new student("2", "Saroj", "Male", "Drivertole", "786382638", "BScCSIT", "3"),
new student("3", "Bikram", "Male", "Devinagar", "89374988747", "BScCSIT", "3")
}; *@

    public void Listing()
    {
        StudentDetails(Id);
        
        if (std==null&&name != "" && Id != "" && Faculty != "" && Semester != "" && address != "" && gender != "" && Phone != "")
        {
        StudentList.students.Add(new StudentStructure(Id, name, gender, address, Phone, Faculty, Semester));
            Clear();
        }
    }
    public void Clear()
    {
        name = "";
        Id = "";
        Faculty = "";
        Semester = "";
        address = "";
        gender = "";
        Phone = "";
        Id1=null;
        std=null;
    }
    public void Edit(StudentStructure s)
    {
        s.IsEdit = !s.IsEdit;
    }

    public void StudentDetails(string s)
    {
        std = StudentList.students.Find(x => x.Id == s);
    }
    public void Remove(StudentStructure s)
    {
    StudentList.students.Remove(s);
      Clear();
    }
    private void Call(string s)
    {
        if(s=="add")
        {
            count++;
            if(count%2==0)
            {
                message2="visible";
                message1="hidden";
            }
            else{
                message2="hidden";
                message1="visible";
            }
        }
        else if(s=="search")
        {
            count++;
            if(count%2==0)
            {
                message3="visible";
                message1="hidden";
            }
            else{
                message3="hidden";
                message1="visible";
            }
        }
        else if(s=="liststudent")
        {
            count++;
            if(count%2==0)
            {
                message4="visible";
                message1="hidden";
            }
            else{
                message4="hidden";
                message1="visible";
            }
        }
    }
}